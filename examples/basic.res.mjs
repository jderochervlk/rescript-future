// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Future from "../src/future.res.mjs";
import * as Js_exn from "rescript/lib/es6/js_exn.js";

Future.fold(Future.map(Future.make((function () {
                return new Promise((function (res, _rej) {
                              res(42);
                            }));
              }), undefined), (function (res) {
            return res + 1 | 0;
          })), (function (prim) {
        console.error(prim);
      }), (function (prim) {
        console.log(prim);
      }));

async function fn() {
  try {
    await Future.fold(Future.map(Future.make((function () {
                    return new Promise((function (_res, rej) {
                                  rej(Js_exn.raiseError("There was a problem"));
                                }));
                  }), undefined), (function (res) {
                return res + 1 | 0;
              })), (function (e) {
            console.error("Exception was not raised and error is handled by the fold function.");
          }), (function (prim) {
            console.log(prim);
          }));
  }
  catch (exn){
    console.error("never logs");
  }
}

fn();

async function fn$1() {
  try {
    await new Promise((function (_res, rej) {
            rej(Js_exn.raiseError("There was a problem"));
          }));
  }
  catch (exn){
    console.error("Exception was thrown and this logs");
  }
}

fn$1();

export {
  fn$1 as fn,
}
/*  Not a pure module */
